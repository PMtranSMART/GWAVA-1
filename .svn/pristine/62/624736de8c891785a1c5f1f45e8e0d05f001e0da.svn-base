package com.pfizer.mrbt.genomics.bioservices;

import com.pfizer.tnb.api.server.util.BioServicesInitParams;
import com.pfizer.tnb.api.server.util.QueryResult;
import com.pfizer.tnb.bsutil.BsServiceClientImpl;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;




public class AmiDemoOld extends BsServiceClientImpl{
    protected static Logger log = Logger.getLogger(com.pfizer.mrbt.genomics.bioservices.AmiDemoOld.class.getName());    

    public AmiDemoOld() {
        log.setLevel(Level.DEBUG);
    }
    
    
    
    public static void main(String[] args) {
        
        
        String host = "bioservicesdev.pfizer.com";
        int port = 443;
        String serverUrl = "https://" + host + ":" + port + "/TouVis/user/DataServletFiltered?";

        BioServicesInitParams initParams = new BioServicesInitParams();
        //initParams.setUser("app");
        //initParams.setPasswd("test");
        initParams.setBioServicesServer(serverUrl);
        initParams.setServer(host);
        initParams.setPort(port);
        AmiDemoOld amiDemo = new AmiDemoOld();
        amiDemo.setInitParams(initParams);
        int service_id = 753;
        System.out.println("Rows\tUnchunked time\tChunked time");


        String qString = serverUrl + "service=" + service_id + "&SERVICE_RENDERID=7";

        System.out.println("Getting the data:");
        QueryResult dataFromBS = amiDemo.getData(qString, service_id, -1, -1, true);
        System.out.println("DataFrameFromBS = " + dataFromBS);
        System.out.println("Writing out the names:");
        System.out.println(dataFromBS.getColumnNames().toString());
        System.out.println("Finished writing out the names:");
        
        service_id = 727;
        String str2 = serverUrl + "service=" + service_id + "&SERVICE_RENDERID=7";
        QueryResult dataFrame2 = amiDemo.getData(str2, service_id, -1, -1, true);
        System.out.println("DataFram2 = " + dataFrame2);
        
        service_id = 744;
    
    }
}
